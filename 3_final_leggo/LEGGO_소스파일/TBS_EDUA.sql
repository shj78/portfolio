-- 1. 교통편(TRANSFORTATION)
CREATE TABLE TRANSFORTATION
( TRF_CD    VARCHAR2(10)    
, TRF_TP    VARCHAR2(15)    CONSTRAINT TRF_TRF_TP_NN NOT NULL
, CONSTRAINT TRF_TRF_CD_PK PRIMARY KEY(TRF_CD)
);
--==>> Table TRANSFORTATION이(가) 생성되었습니다.

INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF1','자차');
INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF2','버스');
INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF3','지하철');
INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF4','기차');
INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF5','비행기');
INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF6','자전거');
INSERT INTO TRANSFORTATION(TRF_CD, TRF_TP) VALUES('TRF7','도보');

SELECT * FROM TRANSFORTATION;

-- 2. 도시(CITY)
CREATE TABLE CITY
( CITY_CD   VARCHAR2(10)    
, CITY_NM   VARCHAR2(15)        CONSTRAINT CITY_CITY_NM_NN NOT NULL
, CONSTRAINT CITY_CITY_CD_PK PRIMARY KEY(CITY_CD)
);
--==>> Table CITY이(가) 생성되었습니다.

INSERT INTO CITY(CITY_CD, CITY_NM) VALUES('CITY1','제주');

SELECT * FROM CITY;


-- 3. 테마(THEME)
CREATE TABLE THEME
( THEM_CD   VARCHAR2(10)    
, THEM_NM   VARCHAR2(15)    CONSTRAINT THEM_THEM_NM_NN NOT NULL
, CONSTRAINT THEM_THEM_CD_PK PRIMARY KEY(THEM_CD)
);
--==>> Table THEME이(가) 생성되었습니다.

INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM1','맛집');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM2','힐링');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM3','액티비티');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM4','관광');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM5','효도');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM6','쇼핑');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM7','캠핑');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM8','체험');
INSERT INTO THEME(THEM_CD, THEM_NM) VALUES('THEM9','기타');

SELECT * FROM THEME;


-- 4. 기타 테마 일정 테이블(THEME_ETC_PLAN)
CREATE TABLE THEME_ETC_PLAN
( TEP_CD        VARCHAR2(10)
, PL_CD         VARCHAR2(10)
, TEP_CONT      VARCHAR2(50)    CONSTRAINT TEP_TEP_CONT_NN NOT NULL
, CONSTRAINT TEP_TEP_CD_PK PRIMARY KEY(TEP_CD)
, CONSTRAINT TEP_PL_CD_FK FOREIGN KEY(PL_CD) REFERENCES PLAN(PL_CD)
);
--==>> Table THEME_ETC_PLAN이(가) 생성되었습니다.


-- 5. 기타 테마 여행기 테이블(THEME_ETC_TRIP)
CREATE TABLE THEME_ETC_TRIP
( TET_CD        VARCHAR2(10)
, TR_CD         VARCHAR2(10)
, TET_CONT      VARCHAR2(50)    CONSTRAINT TET_TET_CONT_NN NOT NULL
, CONSTRAINT TET_TET_CD_PK PRIMARY KEY(TET_CD)
, CONSTRAINT TET_TR_CD_FK FOREIGN KEY(TR_CD) REFERENCES TRIP(TR_CD)
);
--==>> Table THEME_ETC_TRIP이(가) 생성되었습니다.


-- 6. 카테고리(CATEGORY)
CREATE TABLE CATEGORY
( CTG_CD    VARCHAR2(10) 
, CTG_NM    VARCHAR2(6)     CONSTRAINT CTG_CTG_NM_NN NOT NULL
, CONSTRAINT CTG_CTG_CD_PK PRIMARY KEY(CTG_CD)
);
--==>> Table CATEGORY이(가) 생성되었습니다.

INSERT INTO CATEGORY(CTG_CD, CTG_NM) VALUES('CTG1','일정');
INSERT INTO CATEGORY(CTG_CD, CTG_NM) VALUES('CTG2','여행기');
INSERT INTO CATEGORY(CTG_CD, CTG_NM) VALUES('CTG3','사진');
INSERT INTO CATEGORY(CTG_CD, CTG_NM) VALUES('CTG4','계정');
INSERT INTO CATEGORY(CTG_CD, CTG_NM) VALUES('CTG5','기타');

SELECT * FROM CATEGORY;


-- 7. 회원가입 설문조사 답변 상태(MEMBER_ANSWER_STATUS)
CREATE TABLE MEMBER_ANSWER_STATUS
( MEM_ANS_ST_CD    NUMBER(1)
, MEM_ANS_ST       VARCHAR2(10)    CONSTRAINT MAS_MEM_ANS_ST_NN NOT NULL
, CONSTRAINT MAS_MEM_ANS_ST_CD_PK PRIMARY KEY(MEM_ANS_ST_CD)
);
--==>> Table MEMBER_ANSWER_STATUS이(가) 생성되었습니다.

INSERT INTO MEMBER_ANSWER_STATUS(MEM_ANS_ST_CD, MEM_ANS_ST) VALUES(0,'미완료');
INSERT INTO MEMBER_ANSWER_STATUS(MEM_ANS_ST_CD, MEM_ANS_ST) VALUES(1,'완료');
INSERT INTO MEMBER_ANSWER_STATUS(MEM_ANS_ST_CD, MEM_ANS_ST) VALUES(2,'응답거부');

SELECT * FROM MEMBER_ANSWER_STATUS;


-- 8. 가입 방식(JOIN_METHOD)
CREATE TABLE JOIN_METHOD
( JOIN_MTD_CD   VARCHAR2(10)
, JOIN_MTD      VARCHAR2(20)         CONSTRAINT JM_JOIN_MTD_NN NOT NULL
, CONSTRAINT JM_JOIN_MTD_CD_PK PRIMARY KEY(JOIN_MTD_CD)
);
--==>> Table JOIN_METHOD이(가) 생성되었습니다.

INSERT INTO JOIN_METHOD(JOIN_MTD_CD, JOIN_MTD) VALUES('JOIN1','LEGGO');
INSERT INTO JOIN_METHOD(JOIN_MTD_CD, JOIN_MTD) VALUES('JOIN2','KAKAO');
INSERT INTO JOIN_METHOD(JOIN_MTD_CD, JOIN_MTD) VALUES('JOIN3','NAVER');
INSERT INTO JOIN_METHOD(JOIN_MTD_CD, JOIN_MTD) VALUES('JOIN4','GOOGLE');

SELECT * FROM JOIN_METHOD;


-- 9. 계정 상태(ACCOUNT_STATUS)
CREATE TABLE ACCOUNT_STATUS
( ACCT_ST_CD    NUMBER(1)
, ACCT_ST       CHAR(4)     CONSTRAINT AS_ACCT_ST_NN NOT NULL
, CONSTRAINT AS_ACCT_ST_CD_PK PRIMARY KEY(ACCT_ST_CD)
);
--==>> Table ACCOUNT_STATUS이(가) 생성되었습니다.

INSERT INTO ACCOUNT_STATUS(ACCT_ST_CD, ACCT_ST) VALUES(0, '정상');
INSERT INTO ACCOUNT_STATUS(ACCT_ST_CD, ACCT_ST) VALUES(1, '차단');
INSERT INTO ACCOUNT_STATUS(ACCT_ST_CD, ACCT_ST) VALUES(2, '탈퇴');

SELECT * FROM ACCOUNT_STATUS;


-- 10. 공개 여부(OPEN)
CREATE TABLE OPEN
( OPEN_CD   NUMBER(1)
, OPEN_ST   VARCHAR2(10) CONSTRAINT OPEN_OPEN_ST_NN NOT NULL
, CONSTRAINT OPEN_OPEN_CD_PK PRIMARY KEY(OPEN_CD)
);
--==>> Table OPEN이(가) 생성되었습니다.

INSERT INTO OPEN(OPEN_CD, OPEN_ST) VALUES(0, '비공개');
INSERT INTO OPEN(OPEN_CD, OPEN_ST) VALUES(1, '공개');

SELECT * FROM OPEN;


-- 11. 신고 처리 상태(REPORT_STATUS)
CREATE TABLE REPORT_STATUS
( RPT_ST_CD     VARCHAR2(10)
, RPT_ST_CONT   VARCHAR2(8)     CONSTRAINT RS_RPT_ST_CONT_NN NOT NULL
, CONSTRAINT RS_RPT_ST_CD_PK PRIMARY KEY(RPT_ST_CD)
);
--==>> Table REPORT_STATUS이(가) 생성되었습니다.

INSERT INTO REPORT_STATUS(RPT_ST_CD, RPT_ST_CONT) VALUES(0, '미완료');
INSERT INTO REPORT_STATUS(RPT_ST_CD, RPT_ST_CONT) VALUES(1, '처리중');
INSERT INTO REPORT_STATUS(RPT_ST_CD, RPT_ST_CONT) VALUES(2, '완료');

SELECT * FROM REPORT_STATUS;


-- 12. 신고 사유(REPORT_REASON)
CREATE TABLE REPORT_REASON
( RPT_RSN_CD    VARCHAR2(10)
, RPT_RSN       VARCHAR2(200)   CONSTRAINT RR_RPT_RSN_NN NOT NULL
, CONSTRAINT RR_RPT_RSN_CD_PK PRIMARY KEY(RPT_RSN_CD)
);
--==>> Table REPORT_REASON이(가) 생성되었습니다.

INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR1', '주제와 맞지 않음');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR2', '정보가 부정확함');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR3', '지나친 광고성 게시물');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR4', '도배 및 중복성 게시물');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR5', '저작권 침해가 우려됨');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR6', '욕설/비방이 심함');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR7', '외설적인 게시물');
INSERT INTO REPORT_REASON(RPT_RSN_CD, RPT_RSN) VALUES('RR8', '기타');

SELECT * FROM REPORT_REASON;


-- 13. 탈퇴 사유(QUIT_REASON)
CREATE TABLE QUIT_REASON
( QT_RSN_CD     VARCHAR2(10)
, QT_RSN        VARCHAR2(500)   CONSTRAINT QR_QT_RSN_NN NOT NULL
, CONSTRAINT QR_QT_RSN_CD_PK PRIMARY KEY(QT_RSN_CD)
);
--==>> Table QUIT_REASON이(가) 생성되었습니다.

INSERT INTO QUIT_REASON(QT_RSN_CD, QT_RSN) VALUES('QR1','이용빈도 낮음');
INSERT INTO QUIT_REASON(QT_RSN_CD, QT_RSN) VALUES('QR2','재가입');
INSERT INTO QUIT_REASON(QT_RSN_CD, QT_RSN) VALUES('QR3','콘텐츠 부족');
INSERT INTO QUIT_REASON(QT_RSN_CD, QT_RSN) VALUES('QR4','개인정보보호');
INSERT INTO QUIT_REASON(QT_RSN_CD, QT_RSN) VALUES('QR5','기타');

SELECT * FROM QUIT_REASON;


-- 14. 탈퇴 사유 기록(QUIT_REASON_DATE)
CREATE TABLE QUIT_REASON_DATE
( QRD_CD        VARCHAR2(10)
, QT_RSN_CD     VARCHAR2(10)
, QRD_DT        DATE            DEFAULT SYSDATE CONSTRAINT QRD_QRD_DT_NN NOT NULL
, CONSTRAINT QRD_QRD_CD_PK PRIMARY KEY(QRD_CD)
, CONSTRAINT QRD_QT_RSN_CD_FK FOREIGN KEY(QT_RSN_CD) REFERENCES QUIT_REASON(QT_RSN_CD)
);
--==>> Table QUIT_REASON_DATE이(가) 생성되었습니다.



-- 15. 회원 계정(MEMBER)
CREATE TABLE MEMBER
( MEM_CD        VARCHAR2(10)
, ACCT_ST_CD    NUMBER(1) CONSTRAINT MEM_ACCT_ST_NN NOT NULL
, CONSTRAINT MEM_MEM_CD_PK PRIMARY KEY(MEM_CD)
, CONSTRAINT MEM_ACCT_ST_CD_FK FOREIGN KEY(ACCT_ST_CD) REFERENCES ACCOUNT_STATUS(ACCT_ST_CD)
);
--==>> Table MEMBER이(가) 생성되었습니다.

-- 16. 관리자 계정(ADMIN)
CREATE TABLE ADMIN
( ADMIN_CD  VARCHAR2(10)
, MEM_CD    VARCHAR2(10)    CONSTRAINT ADMIN_MEM_CD_NN NOT NULL
, CONSTRAINT ADMIN_ADMIN_CD_PK PRIMARY KEY(ADMIN_CD)
, CONSTRAINT ADMIN_MEM_CD_FK FOREIGN KEY(MEM_CD)
             REFERENCES MEMBER(MEM_CD)
);
--==>> Table ADMIN이(가) 생성되었습니다.

-- 17. 회원 개인정보(MEMBER_DATA)
CREATE TABLE MEMBER_DATA
( MEM_DT_CD        VARCHAR2(10)
, MEM_CD           VARCHAR2(10)    CONSTRAINT MD_MEM_CD_NN NOT NULL
, MEM_ID           VARCHAR2(64)    CONSTRAINT MD_MEM_ID_NN NOT NULL
, MEM_PW           VARCHAR2(32)    CONSTRAINT MD_MEM_PW_NN NOT NULL
, MEM_NNM          VARCHAR2(30)    CONSTRAINT MD_MEM_NNM_NN NOT NULL
, MEM_IMG          VARCHAR2(100)   CONSTRAINT MD_MEM_IMG_NN NOT NULL
, MEM_INTRO        VARCHAR2(80)
, JOIN_MTD_CD      VARCHAR2(10)    CONSTRAINT MD_JOIN_MTD_CD_NN NOT NULL
, MEM_JOIN_DT      DATE            DEFAULT SYSDATE CONSTRAINT MD_MEM_JOIN_DT_NN NOT NULL
, MEM_ANS_ST_CD    NUMBER(1)       CONSTRAINT MD_MEM_ANS_ST_CD_NN NOT NULL
, CONSTRAINT MD_MEM_DT_CD_PK PRIMARY KEY(MEM_DT_CD)
, CONSTRAINT MD_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT MD_JOIN_MTD_CD_FK FOREIGN KEY(JOIN_MTD_CD) REFERENCES JOIN_METHOD(JOIN_MTD_CD)
, CONSTRAINT MD_MEM_ANS_ST_CD_FK FOREIGN KEY(MEM_ANS_ST_CD) REFERENCES MEMBER_ANSWER_STATUS(MEM_ANS_ST_CD)
);
--==>> Table MEMBER_DATA이(가) 생성되었습니다.


-- 18. 탈퇴회원 정보 임시보관(QUIT_MEMBER_DATA)
CREATE TABLE QUIT_MEMBER_DATA
( QT_MEM_CD         VARCHAR2(10)
, MEM_CD            VARCHAR2(10)    CONSTRAINT QMD_MEM_CD_NN NOT NULL
, QT_MEM_ID         VARCHAR2(64)    CONSTRAINT QMD_QT_MEM_ID_NN NOT NULL
, QT_MEM_PW         VARCHAR2(32)    CONSTRAINT QMD_QT_MEM_PW_NN NOT NULL
, QT_MEM_NNM        VARCHAR2(30)    CONSTRAINT QMD_MD_MEM_NNM_NN NOT NULL
, QT_MEM_IMG        VARCHAR2(100)   CONSTRAINT QMD_QT_MEM_IMG_NN NOT NULL
, QT_MEM_INTRO      VARCHAR2(80)
, JOIN_MTD_CD       VARCHAR2(10)    CONSTRAINT QMD_JOIN_MTD_CD_NN NOT NULL
, QT_MEM_JOIN_DT    DATE            CONSTRAINT QMD_QT_MEM_JOIN_DT_NN NOT NULL
, QT_MEM_QUIT_DT    DATE            DEFAULT SYSDATE CONSTRAINT QMD_QT_MEM_QUIT_DT_NN NOT NULL
, CONSTRAINT QMD_QT_MEM_CD_PK PRIMARY KEY(QT_MEM_CD)
, CONSTRAINT QMD_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT QMD_JOIN_MTD_CD_FK FOREIGN KEY(JOIN_MTD_CD) REFERENCES JOIN_METHOD(JOIN_MTD_CD)
);
--==>> Table QUIT_MEMBER_DATA이(가) 생성되었습니다.


-- 19. 스크랩 폴더(SCRAP_FOLDER)
CREATE TABLE SCRAP_FOLDER
( SCR_FD_CD     VARCHAR2(10)
, MEM_CD        VARCHAR2(10)    CONSTRAINT SF_MEM_CD_NN NOT NULL
, SCR_FD_NM     VARCHAR2(20)    CONSTRAINT SF_SCR_FD_NM_NN NOT NULL
, SCR_FD_DT     DATE            DEFAULT SYSDATE  CONSTRAINT SF_SCR_FD_DT_NN NOT NULL
, CONSTRAINT SF_SCR_FD_CD_PK PRIMARY KEY(SCR_FD_CD)
, CONSTRAINT SF_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
);
--==>> Table SCRAP_FOLDER이(가) 생성되었습니다.

-- 20. 팔로우(FOLLOW)
CREATE TABLE FOLLOW
( FOL_CD       VARCHAR2(10)
, MEM_ING_CD   VARCHAR2(10)    CONSTRAINT FOL_MEM_ING_CD_NN NOT NULL
, MEM_ED_CD    VARCHAR2(10)    CONSTRAINT FOL_MEM_ED_CD_NN NOT NULL
, FOL_DT       DATE            DEFAULT SYSDATE CONSTRAINT FOL_FOL_DT_NN NOT NULL
, CONSTRAINT FOL_FOL_CD_PK PRIMARY KEY(FOL_CD)
, CONSTRAINT FOL_MEM_ING_CD_FK FOREIGN KEY(MEM_ING_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT FOL_MEM_ED_CD_FK FOREIGN KEY(MEM_ED_CD) REFERENCES MEMBER(MEM_CD)
);
--==>> Table FOLLOW이(가) 생성되었습니다.

-- 21. 일대일문의 문의(MEMBER_QUESTION)
CREATE TABLE MEMBER_QUESTION
( MEM_QST_CD     VARCHAR2(10)
, MEM_CD         VARCHAR2(10)   CONSTRAINT MQ_MEM_CD_NN NOT NULL
, CTG_CD         VARCHAR2(10)   CONSTRAINT MQ_CTG_CD_NN NOT NULL
, MEM_QST_CONT   VARCHAR2(4000) CONSTRAINT MQ_MEM_QST_CONT_NN NOT NULL
, MEM_QST_DT     DATE           DEFAULT SYSDATE CONSTRAINT MQ_MEM_QST_DT_NN NOT NULL
, CONSTRAINT MQ_MEM_QST_CD_PK PRIMARY KEY(MEM_QST_CD)
, CONSTRAINT MQ_MEM_CD_FK FOREIGN KEY(MEM_CD)
             REFERENCES MEMBER(MEM_CD)
, CONSTRAINT MQ_CTG_CD_FK FOREIGN KEY(CTG_CD)
             REFERENCES CATEGORY(CTG_CD)
);
--==>> Table MEMBER_QUESTION이(가) 생성되었습니다.

-- 22. 일정(PLAN)
CREATE TABLE PLAN
( PL_CD         VARCHAR2(10) 
, MEM_CD        VARCHAR2(10)    CONSTRAINT PL_MEM_CD_NN NOT NULL
, THEM_CD       VARCHAR2(10)    CONSTRAINT PL_THEM_CD_NN NOT NULL
, PL_TT         VARCHAR2(70)    CONSTRAINT PL_PL_TT_NN NOT NULL
, PL_STT        VARCHAR2(100)
, PL_STRT_DT    DATE            CONSTRAINT PL_PL_STRT_DT_NN NOT NULL
, PL_END_DT     DATE            CONSTRAINT PL_PL_END_DT_NN NOT NULL
, PL_IMG        VARCHAR2(100)   CONSTRAINT PL_PL_IMG_NN NOT NULL
, PL_HITS       NUMBER          DEFAULT 0 CONSTRAINT PL_PL_HITS_NN NOT NULL
, PL_DT         DATE            DEFAULT SYSDATE CONSTRAINT PL_PL_DT_NN NOT NULL
, PL_PPL        NUMBER(2)       CONSTRAINT PL_PL_PPL_NN   NOT NULL
, PL_BUD        NUMBER(8)
, OPEN_CD       NUMBER(1)       CONSTRAINT PL_OPEN_CD_NN  NOT NULL
, CONSTRAINT PL_PL_CD_PK   PRIMARY KEY(PL_CD)
, CONSTRAINT PL_MEM_CD_FK  FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT PL_THEM_CD_FK FOREIGN KEY(THEM_CD) REFERENCES THEME(THEM_CD)
, CONSTRAINT PL_OPEN_CD_FK FOREIGN KEY(OPEN_CD) REFERENCES OPEN(OPEN_CD)
);
--==>> Table PLAN이(가) 생성되었습니다.

-- 23. 여행기(TRIP)
CREATE TABLE TRIP
( TR_CD         VARCHAR2(10)
, MEM_CD        VARCHAR2(10)    CONSTRAINT TR_MEM_CD_NN NOT NULL
, CITY_CD       VARCHAR2(10)    CONSTRAINT TR_CITY_CD_NN NOT NULL
, THEM_CD       VARCHAR2(10)    CONSTRAINT TR_THEM_CD_NN NOT NULL
, TR_TT         VARCHAR2(70)    CONSTRAINT TR_TR_TT_NN NOT NULL
, TR_CONT       VARCHAR2(4000)  CONSTRAINT TR_TR_CONT_NN NOT NULL
, TR_PER        VARCHAR2(15)
, TR_PPL        NUMBER(2)
, TR_BUD        NUMBER(8)
, TR_THUM_URL   VARCHAR2(100)   CONSTRAINT TR_TR_THUM_URL_NN NOT NULL
, TR_HITS       NUMBER          DEFAULT 0 CONSTRAINT TR_TR_HITS_NN NOT NULL
, TR_DT         DATE            DEFAULT SYSDATE CONSTRAINT TR_TR_DT_NN NOT NULL
, OPEN_CD       NUMBER(1)       CONSTRAINT TR_OPEN_CD_NN NOT NULL
, CONSTRAINT TR_TR_CD_PK PRIMARY KEY(TR_CD)
, CONSTRAINT TR_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT TR_CITY_CD_FK FOREIGN KEY(CITY_CD) REFERENCES CITY(CITY_CD)
, CONSTRAINT TR_THEM_CD_FK FOREIGN KEY(THEM_CD) REFERENCES THEME(THEM_CD)
, CONSTRAINT TR_OPEN_CD_FK FOREIGN KEY(OPEN_CD) REFERENCES OPEN(OPEN_CD)
);
--==>> Table TRIP이(가) 생성되었습니다.

-- 24. 사진 게시글(PHOTO_POST)
CREATE TABLE PHOTO_POST
( PP_CD     VARCHAR2(10)
, MEM_CD    VARCHAR2(10)    CONSTRAINT PP_MEM_CD_NN NOT NULL
, PP_NM     VARCHAR2(50)    CONSTRAINT PP_PP_NM_NN NOT NULL
, PP_LAT    VARCHAR2(30)    CONSTRAINT PP_PP_LAT_NN NOT NULL
, PP_LONG   VARCHAR2(30)    CONSTRAINT PP_PP_LONG_NN NOT NULL
, PP_CONT   VARCHAR2(4000)  
, PP_HITS   NUMBER          DEFAULT 0 CONSTRAINT PP_PP_HITS_NN NOT NULL
, PP_DT     DATE            DEFAULT SYSDATE CONSTRAINT PP_PP_DT_NN NOT NULL
, OPEN_CD   NUMBER(1)       CONSTRAINT PP_OPEN_CD_NN NOT NULL
, CONSTRAINT PP_PP_CD_PK PRIMARY KEY(PP_CD)
, CONSTRAINT PP_MEM_CD_FK FOREIGN KEY(MEM_CD)
             REFERENCES MEMBER(MEM_CD)
, CONSTRAINT PP_OPEN_CD_FK FOREIGN KEY(OPEN_CD)
             REFERENCES OPEN(OPEN_CD)
);
--==>> Table PHOTO_POST이(가) 생성되었습니다.

-- 25. 회원가입 설문조사 질문(JOIN_QUESTION)
CREATE TABLE JOIN_QUESTION
( JOIN_QST_CD   VARCHAR2(10)
, ADMIN_CD      VARCHAR2(10)     CONSTRAINT JQ_ADMIN_CD_NN NOT NULL
, JOIN_QST_1    VARCHAR2(100)    CONSTRAINT JQ_JOIN_QST_1_NN NOT NULL
, JOIN_QST_2    VARCHAR2(100)    CONSTRAINT JQ_JOIN_QST_2_NN NOT NULL
, JOIN_QST_3    VARCHAR2(100)    CONSTRAINT JQ_JOIN_QST_3_NN NOT NULL
, JOIN_QST_DT   DATE             DEFAULT SYSDATE CONSTRAINT JQ_JOIN_QST_DT_NN NOT NULL
, CONSTRAINT JQ_JOIN_QST_CD_PK PRIMARY KEY(JOIN_QST_CD)
, CONSTRAINT JQ_ADMIN_CD_FK FOREIGN KEY(ADMIN_CD) REFERENCES ADMIN(ADMIN_CD)
);
--==>> Table JOIN_QUESTION이(가) 생성되었습니다.

-- 26. 회원가입 설문조사 답변(JOIN_ANSWER)
CREATE TABLE JOIN_ANSWER
( JOIN_ANS_CD   VARCHAR2(10)
, MEM_CD        VARCHAR2(10)    CONSTRAINT JA_MEM_CD_NN NOT NULL
, JOIN_QST_CD   VARCHAR2(10)    CONSTRAINT JA_JOIN_QST_NN NOT NULL
, JOIN_ANS_1    VARCHAR2(15)    CONSTRAINT JA_JOIN_ANS_1_NN NOT NULL
, JOIN_ANS_2    VARCHAR2(15)    CONSTRAINT JA_JOIN_ANS_2_NN NOT NULL
, JOIN_ANS_3    VARCHAR2(15)    CONSTRAINT JA_JOIN_ANS_3_NN NOT NULL
, CONSTRAINT JA_JOIN_ANS_CD_PK PRIMARY KEY(JOIN_ANS_CD)
, CONSTRAINT JA_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT JA_JOIN_QST_CD_FK FOREIGN KEY(JOIN_QST_CD) REFERENCES JOIN_QUESTION(JOIN_QST_CD)
);
--==>> Table JOIN_ANSWER이(가) 생성되었습니다.

-- 27. 일대일문의 답변(ADMIN_ANSWER)
CREATE TABLE ADMIN_ANSWER
( ADMIN_ANS_CD      VARCHAR2(10)
, MEM_QST_CD        VARCHAR2(10)    CONSTRAINT AA_MEM_QST_CD_NN NOT NULL
, ADMIN_CD          VARCHAR2(10)    CONSTRAINT AA_ADMIN_CD_NN NOT NULL
, ADMIN_ANS_CONT    VARCHAR2(4000)  CONSTRAINT AA_ADMIN_ANS_CONT_NN NOT NULL
, ADMIN_ANS_DT      DATE            DEFAULT SYSDATE CONSTRAINT AA_ADMIN_ANS_DT_NN NOT NULL
, CONSTRAINT AA_ADMIN_ANS_CD_PK PRIMARY KEY(ADMIN_ANS_CD)
, CONSTRAINT AA_MEM_QST_CD_FK FOREIGN KEY(MEM_QST_CD)
             REFERENCES MEMBER_QUESTION(MEM_QST_CD)
, CONSTRAINT AA_ADMIN_CD_FK FOREIGN KEY(ADMIN_CD)
             REFERENCES ADMIN(ADMIN_CD)
);
--==>> Table ADMIN_ANSWER이(가) 생성되었습니다.

-- 28. 일정 댓글(PLAN_COMMENT)
CREATE TABLE PLAN_COMMENT
( PL_CMT_CD     VARCHAR2(10) 
, PL_CD         VARCHAR2(10)     CONSTRAINT PC_PL_CD_NN NOT NULL
, MEM_CD        VARCHAR2(10)     CONSTRAINT PC_MEM_CD_NN NOT NULL
, PL_CMT_CONT   VARCHAR2(1000)   CONSTRAINT PC_PL_CMT_CONT_NN NOT NULL
, PL_CMT_DT     DATE             DEFAULT SYSDATE CONSTRAINT PC_PL_CMT_DT_NN NOT NULL
, CONSTRAINT PC_PL_CMT_CD_PK   PRIMARY KEY(PL_CMT_CD)
, CONSTRAINT PC_PL_CD_FK       FOREIGN KEY(PL_CD) REFERENCES PLAN(PL_CD)
, CONSTRAINT PC_MEM_CD_FK      FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
);
--==>> Table PLAN_COMMENT이(가) 생성되었습니다.

-- 29. 일정 스크랩(PLAN_SCRAP)
CREATE TABLE PLAN_SCRAP
( PL_SCR_CD VARCHAR2(10) 
, SCR_FD_CD VARCHAR2(10)        CONSTRAINT PS_SCR_FD_CD_NN NOT NULL
, PL_CD		VARCHAR2(10)        CONSTRAINT PS_PL_CD_NN NOT NULL
, PL_SCR_DT	DATE                DEFAULT SYSDATE CONSTRAINT PS_PL_SCR_DT_NN NOT NULL
, CONSTRAINT PS_PL_SCR_CD_PK PRIMARY KEY(PL_SCR_CD)
, CONSTRAINT PS_SCR_FD_CD_FK FOREIGN KEY(SCR_FD_CD)  REFERENCES SCRAP_FOLDER(SCR_FD_CD)
, CONSTRAINT PS_PL_CD_FK	 FOREIGN KEY(PL_CD)      REFERENCES PLAN(PL_CD)
);
--==>> Table PLAN_SCRAP이(가) 생성되었습니다.

-- 30. 일정 신고(PLAN_REPORT)
CREATE TABLE PLAN_REPORT
( PL_RPT_CD 	VARCHAR2(10)
, PL_CD		    VARCHAR2(10)        CONSTRAINT PR_PL_CD_NN NOT NULL
, MEM_CD		VARCHAR2(10)        CONSTRAINT PR_MEM_CD_NN NOT NULL
, PL_RPT_DT		DATE		        DEFAULT SYSDATE CONSTRAINT PR_PL_RPT_DT_NN NOT NULL
, RPT_RSN_CD	VARCHAR2(10)        CONSTRAINT PR_RPT_RSN_CD_NN NOT NULL
, ADMIN_CD		VARCHAR2(10)    
, RPT_ST_CD		VARCHAR2(10)        CONSTRAINT PR_RPT_ST_CD_NN NOT NULL
, PL_RPT_PRC_DT	DATE        
, CONSTRAINT PR_PL_RPT_CD_PK   PRIMARY KEY(PL_RPT_CD)
, CONSTRAINT PR_PL_CD_FK       FOREIGN KEY(PL_CD)      REFERENCES PLAN(PL_CD)
, CONSTRAINT PR_MEM_CD_FK      FOREIGN KEY(MEM_CD)     REFERENCES MEMBER(MEM_CD) 
, CONSTRAINT PR_RPT_RSN_CD_FK  FOREIGN KEY(RPT_RSN_CD) REFERENCES REPORT_REASON(RPT_RSN_CD)
, CONSTRAINT PR_ADMIN_CD_FK    FOREIGN KEY(ADMIN_CD)   REFERENCES ADMIN(ADMIN_CD)
, CONSTRAINT PR_RPT_ST_CD_FK   FOREIGN KEY(RPT_ST_CD)  REFERENCES REPORT_STATUS(RPT_ST_CD)
);
--==>> Table PLAN_REPORT이(가) 생성되었습니다.

-- 31. 일정 공동편집자(PLAN_COEDIT)
CREATE TABLE PLAN_COEDIT
( PL_CEDT_CD VARCHAR2(10)
, PL_CD      VARCHAR2(10)   CONSTRAINT PCT_PL_CD_NN NOT NULL
, MEM_CD     VARCHAR2(10)   CONSTRAINT PCT_MEM_CD_NN NOT NULL
, PL_CEDT_ASK_DT DATE       DEFAULT SYSDATE CONSTRAINT PCT_PL_CEDT_ASK_DT_NN NOT NULL
, PL_CEDT_ACPT_DT DATE 
, CONSTRAINT PCT_PL_CEDT_CD_PK PRIMARY KEY(PL_CEDT_CD) 
, CONSTRAINT PCT_PL_CD_FK FOREIGN KEY(PL_CD) REFERENCES PLAN(PL_CD)
, CONSTRAINT PCT_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
);
--==>> Table PLAN_COEDIT이(가) 생성되었습니다.

-- 32. 추가된 장소(ADD_LOCATION)
CREATE TABLE ADD_LOCATION
( LOC_CD	VARCHAR2(10) 
, PL_CD		VARCHAR2(10)    CONSTRAINT AL_PL_CD_NN NOT NULL	
, LOC_NM	VARCHAR2(50)    CONSTRAINT AL_LOC_NM_NN NOT NULL
, CITY_CD	VARCHAR2(10)    CONSTRAINT AL_CITY_CD_NN NOT NULL 
, LOC_LAT	VARCHAR2(30)    CONSTRAINT AL_LOC_LAT_NN NOT NULL
, LOC_LONG	VARCHAR2(30)    CONSTRAINT AL_LOC_LONG_NN NOT NULL
, LOC_DESC	VARCHAR2(600) 
, LOC_STRT_TIME		DATE    CONSTRAINT AL_LOC_STRT_TIME_NN   NOT NULL
, LOC_END_TIME		DATE    CONSTRAINT AL_LOC_END_TIME_NN    NOT NULL
, TRF_CD	VARCHAR2(10)
, LOC_TRF_CONT	VARCHAR2(40)
, CONSTRAINT AL_LOC_CD_PK   PRIMARY KEY(LOC_CD)
, CONSTRAINT AL_PL_CD_FK	FOREIGN KEY(PL_CD) REFERENCES PLAN(PL_CD)
, CONSTRAINT AL_CTIY_CD_FK  FOREIGN KEY(CITY_CD) REFERENCES CITY(CITY_CD)
, CONSTRAINT AL_TRF_CD_FK   FOREIGN KEY(TRF_CD) REFERENCES TRANSFORTATION(TRF_CD)
);
--==>> Table ADD_LOCATION이(가) 생성되었습니다.

-- 33. 여행기 댓글(TRIP_COMMENT)
CREATE TABLE TRIP_COMMENT
( TR_CMT_CD     VARCHAR2(10)
, TR_CD         VARCHAR2(10)    CONSTRAINT TC_TR_CD_NN NOT NULL
, MEM_CD        VARCHAR2(10)    CONSTRAINT TC_MEM_CD_NN NOT NULL
, TR_CMT_CONT   VARCHAR2(4000)  CONSTRAINT TC_TR_CMT_CONT_NN NOT NULL
, TR_CMT_DT     DATE            DEFAULT SYSDATE     CONSTRAINT TC_TR_CMT_DT_NN NOT NULL
, CONSTRAINT TC_TR_CMT_CD_PK PRIMARY KEY(TR_CMT_CD)
, CONSTRAINT TC_TR_CD_FK FOREIGN KEY(TR_CD) REFERENCES TRIP(TR_CD)
, CONSTRAINT TC_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
);
--==>> Table TRIP_COMMENT이(가) 생성되었습니다.

-- 34. 여행기 스크랩(TRIP_SCRAP)
CREATE TABLE TRIP_SCRAP
( TR_SCR_CD     VARCHAR2(10)
, TR_CD         VARCHAR2(10)    CONSTRAINT TS_TR_CD_NN NOT NULL
, SCR_FD_CD     VARCHAR2(10)    CONSTRAINT TS_SCR_FD_CD_NN NOT NULL
, TR_SCR_DT     DATE            DEFAULT SYSDATE   CONSTRAINT TS_TR_SCR_DT_NN NOT NULL
, CONSTRAINT TS_TR_SCR_CD_PK PRIMARY KEY(TR_SCR_CD)
, CONSTRAINT TS_TR_CD_FK FOREIGN KEY(TR_CD) REFERENCES TRIP(TR_CD)
, CONSTRAINT TS_SCR_FD_CD_FK FOREIGN KEY(SCR_FD_CD) REFERENCES SCRAP_FOLDER(SCR_FD_CD)
);
--==>> Table TRIP_SCRAP이(가) 생성되었습니다.

-- 35. 여행기 신고(TRIP_REPORT)
CREATE TABLE TRIP_REPORT
( TR_RPT_CD         VARCHAR2(10)
, TR_CD             VARCHAR2(10)  CONSTRAINT TRT_TR_CD_NN NOT NULL
, MEM_CD            VARCHAR2(10)  CONSTRAINT TRT_MEM_CD_NN NOT NULL
, TR_RPT_DT         DATE          DEFAULT SYSDATE  CONSTRAINT TRT_TR_RPT_DT_NN NOT NULL
, RPT_RSN_CD        VARCHAR2(10)  CONSTRAINT TRT_RPT_RSN_CD_NN NOT NULL
, ADMIN_CD          VARCHAR2(10)
, RPT_ST_CD         VARCHAR2(10)  CONSTRAINT TRT_RPT_ST_CD_NN NOT NULL
, TR_RPT_PRC_DT     DATE
, CONSTRAINT TRT_TR_RPT_CD_PK PRIMARY KEY(TR_RPT_CD)
, CONSTRAINT TRT_TR_CD_FK FOREIGN KEY(TR_CD) REFERENCES TRIP(TR_CD)
, CONSTRAINT TRT_MEM_CD_FK FOREIGN KEY(MEM_CD) REFERENCES MEMBER(MEM_CD)
, CONSTRAINT TRT_RPT_RSN_CD_FK FOREIGN KEY(RPT_RSN_CD) REFERENCES REPORT_REASON(RPT_RSN_CD)
, CONSTRAINT TRT_ADMIN_CD_FK FOREIGN KEY(ADMIN_CD) REFERENCES ADMIN(ADMIN_CD)
, CONSTRAINT TRT_RPT_ST_CD_FK FOREIGN KEY(RPT_ST_CD) REFERENCES REPORT_STATUS(RPT_ST_CD)
);
--==>> Table TRIP_REPORT이(가) 생성되었습니다.

-- 36. 사진(PHOTO)
CREATE TABLE PHOTO
( PHT_CD    VARCHAR2(10)
, PP_CD     VARCHAR2(10)    CONSTRAINT PHT_PP_CD_NN NOT NULL
, PHT_URL   VARCHAR2(100)   CONSTRAINT PHT_PHT_URL_NN NOT NULL
, CONSTRAINT PHT_PHT_CD_PK PRIMARY KEY(PHT_CD)
, CONSTRAINT PHT_PP_CD_FK FOREIGN KEY(PP_CD)
             REFERENCES PHOTO_POST(PP_CD)
);
--==>> Table PHOTO이(가) 생성되었습니다.

-- 37. 사진 게시글 댓글(PHOTO_POST_COMMENT)
CREATE TABLE PHOTO_POST_COMMENT
( PPC_CD    VARCHAR2(10)
, PP_CD     VARCHAR2(10)    CONSTRAINT PPC_PP_CD_NN NOT NULL
, MEM_CD    VARCHAR2(10)    CONSTRAINT PPC_MEM_CD_NN NOT NULL
, PPC_CONT  VARCHAR2(1000)  CONSTRAINT PPC_PPC_CONT_NN NOT NULL
, PPC_DT    DATE            DEFAULT SYSDATE CONSTRAINT PPC_PPC_DT_NN NOT NULL
, CONSTRAINT PPC_PPC_CD_PK PRIMARY KEY(PPC_CD)
, CONSTRAINT PPC_PP_CD_FK FOREIGN KEY(PP_CD)
             REFERENCES PHOTO_POST(PP_CD)
, CONSTRAINT PPC_MEM_CD_FK FOREIGN KEY(MEM_CD)
             REFERENCES MEMBER(MEM_CD)
);
--==>> Table PHOTO_POST_COMMENT이(가) 생성되었습니다.

-- 38.사진 게시글 스크랩(PHOTO_POST_SCRAP)
CREATE TABLE PHOTO_POST_SCRAP
( PPS_CD    VARCHAR2(10)
, SCR_FD_CD VARCHAR2(10)    CONSTRAINT PPS_SCR_FD_CD_NN NOT NULL
, PP_CD     VARCHAR2(10)    CONSTRAINT PPS_PP_CD_NN NOT NULL
, PPS_DT    DATE            DEFAULT SYSDATE CONSTRAINT PPS_PPS_DT_NN NOT NULL
, CONSTRAINT PPS_PPS_CD_PK PRIMARY KEY(PPS_CD)
, CONSTRAINT PPS_SCR_FD_CD_FK FOREIGN KEY(SCR_FD_CD)
             REFERENCES SCRAP_FOLDER(SCR_FD_CD)
, CONSTRAINT PPS_PP_CD_FK FOREIGN KEY(PP_CD)
             REFERENCES PHOTO_POST(PP_CD)
);
--==>> Table PHOTO_POST_SCRAP이(가) 생성되었습니다.

-- 39. 사진 게시글 신고(PHOTO_POST_REPORT)
CREATE TABLE PHOTO_POST_REPORT
( PPR_CD        VARCHAR2(10)
, PP_CD         VARCHAR2(10)    CONSTRAINT PPR_PP_CD_NN NOT NULL
, MEM_CD        VARCHAR2(10)    CONSTRAINT PPR_MEM_CD_NN NOT NULL
, PPR_DT        DATE            DEFAULT SYSDATE CONSTRAINT PPR_PPR_DT_NN NOT NULL
, RPT_RSN_CD    VARCHAR2(10)    CONSTRAINT PPR_RPT_RSN_CD_NN NOT NULL
, ADMIN_CD      VARCHAR2(10)
, RPT_ST_CD     VARCHAR2(10)    CONSTRAINT PPR_RPT_ST_CD_NN NOT NULL
, PPR_PRC_DT    DATE
, CONSTRAINT PPR_PPR_CD_PK PRIMARY KEY(PPR_CD)
, CONSTRAINT PPR_PP_CD_FK FOREIGN KEY(PP_CD)
             REFERENCES PHOTO_POST(PP_CD)
, CONSTRAINT PPR_MEM_CD_FK FOREIGN KEY(MEM_CD)
             REFERENCES MEMBER(MEM_CD)
, CONSTRAINT PPR_RPT_RSN_CD_FK FOREIGN KEY(RPT_RSN_CD)
             REFERENCES REPORT_REASON(RPT_RSN_CD)
, CONSTRAINT PPR_ADMIN_CD_FK FOREIGN KEY(ADMIN_CD)
             REFERENCES ADMIN(ADMIN_CD)
, CONSTRAINT PPR_RPT_ST_CD_FK FOREIGN KEY(RPT_ST_CD)
             REFERENCES REPORT_STATUS(RPT_ST_CD)
);
--==>> Table PHOTO_POST_REPORT이(가) 생성되었습니다.
